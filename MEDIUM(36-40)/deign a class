import java.util.*;

public class ExamRoom {
    private int n;
    private TreeSet<Integer> seats;

    public ExamRoom(int n) {
        this.n = n;
        this.seats = new TreeSet<>();
    }

    public int seat() {
        if (seats.isEmpty()) {
            seats.add(0);
            return 0;
        }

        int maxDist = 0;
        int bestSeat = 0;
        int prevSeat = -1;
        int firstSeat = seats.first();
        if (firstSeat > 0) {
            maxDist = firstSeat;
            bestSeat = 0;
        }
        for (int seat : seats) {
            if (prevSeat != -1) {
                int dist = (seat - prevSeat) / 2;
                if (dist > maxDist) {
                    maxDist = dist;
                    bestSeat = prevSeat + dist;
                }
            }
            prevSeat = seat;
        }

      
        if (prevSeat != -1 && (n - 1 - prevSeat) > maxDist) {
            bestSeat = n - 1;
        }

        seats.add(bestSeat);
        return bestSeat;
    }

    public void leave(int p) {
        seats.remove(p);
    }

    public static void main(String[] args) {
        ExamRoom examRoom = new ExamRoom(10);

        System.out.println(examRoom.seat()); // Output: 0
        System.out.println(examRoom.seat()); // Output: 9
        System.out.println(examRoom.seat()); // Output: 4
        System.out.println(examRoom.seat()); // Output: 2
        examRoom.leave(4);
        System.out.println(examRoom.seat()); // Output: 5
    }
}
